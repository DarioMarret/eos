import db from "./Database/model";


export const FormularioOS = async (formData) => {
    console.log("InserOSOrdenServicioID-->", formData.OrdenServicioID)
    // const existe = await SelectOSOrdenServicioID(formData.OrdenServicioID)
    console.log("existe", existe)
    if (!existe) {
        return new Promise((resolve, reject) => {
            db.exec([{
                sql: `INSERT INTO OSFORMULARIO (
                    OS_CheckList,
                    OS_Encuesta,
                    OS_Firmas,
                    OS_PartesRepuestos,
                    OS_Anexos,
                    OS_Tiempos,
                    OS_Colaboradores,
                    provinciaId,
                    cantonId,
                    localidad,
                    tipoIncidencia ,
                    OrdenServicioID,
                    TipoVisita,
                    Fecha,
                    Estado,
                    Finalizado,
                    evento_id,
                    ticket_id,
                    empresa_id,
                    contrato_id,
                    equipo_id,
                    Serie,
                    TipoEquipo,
                    ModeloEquipo,
                    Marca,
                    ObservacionEquipo,
                    CodigoEquipoCliente,
                    ClienteID,
                    ClienteNombre,
                    Sintomas,
                    Causas,
                    Diagnostico,
                    Acciones,
                    SitioTrabajo,
                    EstadoEquipo,
                    ComentarioRestringido,
                    IncluyoUpgrade,
                    ComentarioUpgrade,
                    Seguimento,
                    FechaSeguimiento,
                    ObservacionCliente ,
                    ObservacionIngeniero,
                    IngenieroID,
                    UsuarioCreacion,
                    FechaCreacion,
                    UsuarioModificacion,
                    FechaModificacion,
                    IdEquipoContrato,
                    EstadoEqPrevio,
                    ContactoInforme,
                    CargoContactoInforme,
                    ObservacionCheckList,
                    Direccion,
                    Ciudad,
                    nuevaVisita,
                    incidencia,
                    release,
                    OS_ASUNTO,
                    OS_FINALIZADA,
                    enviado,
                    codOS
                ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)`,
                args: [
                    JSON.stringify(formData.OS_CheckList),
                    JSON.stringify(formData.OS_Encuesta),
                    JSON.stringify(formData.OS_Firmas),
                    JSON.stringify(formData.OS_PartesRepuestos),
                    JSON.stringify(formData.OS_Anexos),
                    JSON.stringify(formData.OS_Tiempos),
                    JSON.stringify(formData.OS_Colaboradores),
                    formData.provinciaId,
                    formData.cantonId,
                    formData.localidad,
                    formData.tipoIncidencia,
                    formData.OrdenServicioID,
                    formData.TipoVisita,
                    formData.Fecha,
                    formData.Estado,
                    formData.Finalizado,
                    formData.evento_id,
                    formData.ticket_id,
                    formData.empresa_id,
                    formData.contrato_id,
                    formData.equipo_id,
                    formData.Serie,
                    formData.TipoEquipo,
                    formData.ModeloEquipo,
                    formData.Marca,
                    formData.ObservacionEquipo,
                    formData.CodigoEquipoCliente,
                    formData.ClienteID,
                    formData.ClienteNombre,
                    formData.Sintomas,
                    formData.Causas,
                    formData.Diagnostico,
                    formData.Acciones,
                    formData.SitioTrabajo,
                    formData.EstadoEquipo,
                    formData.ComentarioRestringido,
                    formData.IncluyoUpgrade,
                    formData.ComentarioUpgrade,
                    formData.Seguimento,
                    formData.FechaSeguimiento,
                    formData.ObservacionCliente,
                    formData.ObservacionIngeniero,
                    formData.IngenieroID,
                    formData.UsuarioCreacion,
                    formData.FechaCreacion,
                    formData.UsuarioModificacion,
                    formData.FechaModificacion,
                    formData.IdEquipoContrato,
                    formData.EstadoEqPrevio,
                    formData.ContactoInforme,
                    formData.CargoContactoInforme,
                    formData.ObservacionCheckList,
                    formData.Direccion,
                    formData.Ciudad,
                    formData.nuevaVisita,
                    formData.incidencia,
                    formData.release,
                    formData.OS_ASUNTO,
                    formData.OS_FINALIZADA,
                    formData.enviado,
                    formData.codOS
                ],
            }], false, (err, results) => {
                if (err) {
                    console.log("error", err);
                } else {
                    console.log("results OS_OrdenServicio -->", results);
                }
            })
            resolve(true)
        });
    } else {
        return true
    }
}